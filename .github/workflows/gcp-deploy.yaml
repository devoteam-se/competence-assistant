name: Deploy to GCP

on:
  workflow_call:
    inputs:
      BUILD_ENV:
        required: true
        type: string

jobs:
  deploy:
    name: Deploy to GCP
    runs-on: 'ubuntu-latest'
    environment:
      name: ${{ inputs.BUILD_ENV }}

    steps:
      - uses: actions/checkout@v4

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          project_id: ${{ vars.PROJECT_ID }}
          export_environment_variables: true
          create_credentials_file: true

      - name: Set up cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ vars.PROJECT_ID }}

      - name: authorize docker push
        run: gcloud auth configure-docker ${{ vars.REGION }}-docker.pkg.dev --quiet

      - name: Build and push service container image
        run: |-
          docker build --tag ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO }}/${{ vars.APP_IMAGE }} --build-arg BUILD_MODE=${{ vars.BUILD_MODE }} .
          docker push ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO }}/${{ vars.APP_IMAGE }}

      - name: Build and push migrations container image
        working-directory: ./server
        run: |-
          docker build -f Dockerfile.dbmate --tag ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO }}/migrate-db .
          docker push ${{ vars.REGION }}-docker.pkg.dev/${{ vars.PROJECT_ID }}/${{ vars.DOCKER_REPO }}/${{ vars.DB_MIGRATE_IMAGE }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform deploy
        id: deploy
        working-directory: ./terraform/cd
        env:
          TF_VAR_region: ${{ vars.REGION }}
          TF_VAR_project: ${{ vars.PROJECT_ID }}
          TF_VAR_service_account: ${{ vars.SERVICE_ACCOUNT }}
          TF_VAR_docker_repo: ${{ vars.DOCKER_REPO }}
          TF_VAR_db_user: ${{ secrets.DB_USER }}
          TF_VAR_app_image: ${{ vars.APP_IMAGE }}
          TF_VAR_custom_domain: ${{ vars.CUSTOM_DOMAIN }}
          TF_VAR_db_migrate_image: ${{ vars.DB_MIGRATE_IMAGE }}
        run: |
          terraform init -no-color -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}"
          terraform apply -auto-approve -no-color

      - name: Get migration job name
        id: get-migration-job-name
        working-directory: ./terraform/cd
        run: echo MIGRATE_DB_JOB_NAME=$(terraform output -raw migrate_db_job_name) >> $GITHUB_OUTPUT

      - name: Execute migration job
        run: |
          gcloud run jobs execute ${{ steps.get-migration-job-name.outputs.MIGRATE_DB_JOB_NAME }} \
          --region ${{ vars.REGION }}
